version: "3"
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    command: ["./wait-for-it.sh", "database:5432", "--", "yarn", "run:server"]
    volumes:
      - /usr/src/app
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
    depends_on:
      - database
      - worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./wait-for-it.sh", "database:5432", "--", "yarn", "run:worker"]
    volumes:
      - /usr/src/app
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
    depends_on:
      - database
  # storefront:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-storefront
  #     args:
  #       STOREFRONT_VERSION: 0.1.25
  #   ports:
  #     - 4000:4000
  #   environment:
  #     SERVER_API_HOST: http://server
  #     SERVER_API_PORT: 3000
  #     SERVER_API_PATH: shop-api
  database:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ghienan}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Admin@123}
      POSTGRES_DB: ecommerce
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
      #- ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-Phong@123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - database

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin:
